/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package view;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import model.*;
import model.interfaces.GameEngine;
import model.interfaces.Player;
import controller.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import model.interfaces.DicePair;
import model.interfaces.GameEngineCallback;

/**
*
* @author Xinyu YE s3468489
*/
public class GameEngineCallbackGUI extends javax.swing.JFrame implements GameEngineCallback
{
    public GameEngine ge;
    AddPlayer ap;
    GameEngineCallbackController gecbc;
    PlaceBetController pbc;
    RollPlayerController rpc;
    RollHouseController rhc;
    /**
     * Creates new form GameEngineCallBackGUI
     */
    public GameEngineCallbackGUI(GameEngine ge)
    {
        initComponents();
        this.ge = ge; 
        this.ge.addGameEngineCallback(this);
        ap = new AddPlayer(ge);
        gecbc = new GameEngineCallbackController(ge,this);
        pbc = new PlaceBetController(ge, this);
        rpc = new RollPlayerController(ge, this);
        rhc = new RollHouseController(ge, this);
        this.jLABDice1.setIcon(new ImageIcon("df1.png"));
        this.jLABDice2.setIcon(new ImageIcon("df1.png"));
        this.setVisible(true);
    }
    
//        private void setFrame()
//        {
//            setResizable(false);
//            setLocation(500, 300);
//            setSize(680, 370);
//        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLABDice1 = new javax.swing.JLabel();
        jLABDice2 = new javax.swing.JLabel();
        jBRollPlayer = new javax.swing.JButton();
        jBRollHouse = new javax.swing.JButton();
        jLabName = new javax.swing.JLabel();
        jTFBet = new javax.swing.JTextField();
        jBBet = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTAresult = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jFile = new javax.swing.JMenu();
        jMIAdd = new javax.swing.JMenuItem();
        jEdit = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 102, 255));
        setMinimumSize(new java.awt.Dimension(720, 450));
        setPreferredSize(new java.awt.Dimension(720, 450));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Points", "Bets", "Result"
            }
        ));
        jScrollPane1.setViewportView(table);

        jLABDice1.setBackground(new java.awt.Color(255, 153, 153));

        jBRollPlayer.setText("Roll Player");
        

        jBRollHouse.setText("Roll House");
        jBRollHouse.setPreferredSize(new java.awt.Dimension(109, 29));
        

        jLabName.setBackground(new java.awt.Color(255, 255, 255));
        jLabName.setForeground(new java.awt.Color(153, 0, 204));

        jBBet.setText("Place Bet");
       

        jTAresult.setColumns(20);
        jTAresult.setRows(5);
        jScrollPane2.setViewportView(jTAresult);

        jFile.setText("File");

        jMIAdd.setText("Add Player");
        jMIAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIAddActionPerformed(evt);
            }
        });
        jFile.add(jMIAdd);

        jMenuBar1.add(jFile);

        jEdit.setText("Edit");
        jMenuBar1.add(jEdit);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jTFBet, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jBBet)))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLABDice1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(jLABDice2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBRollPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBRollHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabName, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTFBet, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBBet)))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBRollPlayer)
                        .addGap(11, 11, 11)
                        .addComponent(jBRollHouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLABDice1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLABDice2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(30, 30, 30)
                .addComponent(jLabName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jMIAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIAddActionPerformed
        ap.setVisible(true);
    }//GEN-LAST:event_jMIAddActionPerformed
    
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        doRefTable();
    }//GEN-LAST:event_formWindowActivated
    
    
    public void doRefName(String name,DicePair dp)
    {
        this.jLabName.setText(name+ ": ROLLING Dice 1: " + dp.getDice1()
                + ",  Dice 2: " + dp.getDice2()
                + " .. Total: " + (dp.getDice1()+dp.getDice2()));
    }
 
    public void doRefTable()
    {
        DefaultTableModel dtm = new DefaultTableModel();
        
        String[] tableHeads = new String[]{"ID", "Name", "Points","Bets","Result"};
        
        dtm.setColumnIdentifiers(tableHeads);
        
        List<Player> data = (List)ge.getAllPlayers();
        
        for(int i = 0; i < data.size();i++)
        {
            Player p = data.get(i);
            {
                
                Object[] dataRow =
                {p.getPlayerId(), p.getPlayerName(), p.getPoints(),p.getBet(),
                    p.getRollResult() == null? "" : p.getRollResult().getDice1()
                        + p.getRollResult().getDice2()};
                
                dtm.addRow(dataRow);
            }
        }
        table.setModel(dtm);
    }
   
    public void doRefDices(DicePair r)
    {
        
        switch(r.getDice1())
        {
            case 1:
                this.jLABDice1.setIcon(new ImageIcon("df1.png"));
                break;
            case 2:
                this.jLABDice1.setIcon(new ImageIcon("df2.png"));
                break;
            case 3:
                this.jLABDice1.setIcon(new ImageIcon("df3.png"));
                break;
            case 4:
                this.jLABDice1.setIcon(new ImageIcon("df4.png"));
                break;
            case 5:
                this.jLABDice1.setIcon(new ImageIcon("df5.png"));
                break;
            case 6:
                this.jLABDice1.setIcon(new ImageIcon("df6.png"));
                break;
        }
        switch(r.getDice2())
        {
            case 1:
                this.jLABDice2.setIcon(new ImageIcon("df1.png"));
                break;
            case 2:
                this.jLABDice2.setIcon(new ImageIcon("df2.png"));
                break;
            case 3:
                this.jLABDice2.setIcon(new ImageIcon("df3.png"));
                break;
            case 4:
                this.jLABDice2.setIcon(new ImageIcon("df4.png"));
                break;
            case 5:
                this.jLABDice2.setIcon(new ImageIcon("df5.png"));
                break;
            case 6:
                this.jLABDice2.setIcon(new ImageIcon("df6.png"));
                break;
        }
    }
    
    public void doRefTextArea(DicePair dp,GameEngine ge)
    {
        String houseInfo = "";
        
        houseInfo = "HOUSE:" + " *RESULT* Dice 1: " + dp.getDice1() +
                "  Dice 2: " + dp.getDice2()  + " ..Total: " + (dp.getDice1()+dp.getDice2())+"\n";
        
      
        
        for(Player p:ge.getAllPlayers())
        {
            houseInfo+= p.toString()+"\n";
        }
        this.jTAresult.setText(houseInfo);
    }
    
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) 
//    {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
//        */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(GameEngineCallbackGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(GameEngineCallbackGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(GameEngineCallbackGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(GameEngineCallbackGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//        
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() 
//        {
//            public void run() 
//            {
//                new GameEngineCallbackGUI().setVisible(true);
//            }
//        });
//    }
    
    // Variables declaration 
    public javax.swing.JButton jBBet;
    public javax.swing.JButton jBRollHouse;
    public javax.swing.JButton jBRollPlayer;
    private javax.swing.JMenu jEdit;
    private javax.swing.JMenu jFile;
    private javax.swing.JLabel jLABDice1;
    private javax.swing.JLabel jLABDice2;
    private javax.swing.JLabel jLabName;
    public javax.swing.JMenuItem jMIAdd;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTAresult;
    public javax.swing.JTextField jTFBet;
    public javax.swing.JTable table;
    // End of variables declaration

    @Override
    public void intermediateResult(Player player, DicePair dicePair, GameEngine gameEngine) 
    {   
         SwingUtilities.invokeLater(new Runnable()
        {
            public void run()
            {
                doRefDices(dicePair);
                doRefName(player.getPlayerName(),dicePair);
            }
        });
         
    }

    @Override
    public void result(Player player, DicePair result, GameEngine gameEngine) 
    {
        SwingUtilities.invokeLater(new Runnable()
        {
            public void run()
            {
                doRefTable();
            }
        });
    }

    @Override
    public void intermediateHouseResult(DicePair dicePair, GameEngine gameEngine) 
    {
       SwingUtilities.invokeLater(new Runnable()
        {
            public void run()
            {
                doRefDices(dicePair);
                doRefName("House",dicePair);
            }
        });
    }

    @Override
    public void houseResult(DicePair result, GameEngine gameEngine) 
    {
        SwingUtilities.invokeLater(new Runnable()
        {
            public void run()
            {
                doRefTable();
                doRefTextArea(result,gameEngine);
            }
        });
    }
}
